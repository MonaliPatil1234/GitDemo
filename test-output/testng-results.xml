<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="7" total="19" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-11T17:57:14 IST" name="TestNG_XML_Demo" finished-at="2023-03-11T17:57:15 IST" duration-ms="416">
    <groups>
      <group name="Regression">
        <method signature="class_2.personalLoanHome()[pri:0, instance:sec_16_TestNG.class_2@be64738]" name="personalLoanHome" class="sec_16_TestNG.class_2"/>
        <method signature="class_3.mobileLogin()[pri:0, instance:sec_16_TestNG.class_3@1ab3a8c8]" name="mobileLogin" class="sec_16_TestNG.class_3"/>
        <method signature="class_4.MobileMtd1()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" name="MobileMtd1" class="sec_16_TestNG.class_4"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2023-03-11T17:57:14 IST" name="Test_No_1" finished-at="2023-03-11T17:57:15 IST" duration-ms="129">
      <class name="sec_16_TestNG.class_1">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:sec_16_TestNG.class_1@6fe7aac8]" started-at="2023-03-11T17:57:14 IST" name="prerequisite" finished-at="2023-03-11T17:57:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="demo1()[pri:0, instance:sec_16_TestNG.class_1@6fe7aac8]" started-at="2023-03-11T17:57:14 IST" name="demo1" finished-at="2023-03-11T17:57:14 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo1 -->
        <test-method is-config="true" signature="executeLast()[pri:0, instance:sec_16_TestNG.class_1@6fe7aac8]" started-at="2023-03-11T17:57:15 IST" name="executeLast" finished-at="2023-03-11T17:57:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- executeLast -->
      </class> <!-- sec_16_TestNG.class_1 -->
      <class name="sec_16_TestNG.class_2">
        <test-method signature="MobileMtd1()[pri:0, instance:sec_16_TestNG.class_2@be64738]" started-at="2023-03-11T17:57:14 IST" name="MobileMtd1" finished-at="2023-03-11T17:57:15 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileMtd1 -->
        <test-method is-config="true" signature="afterevrymethod()[pri:0, instance:sec_16_TestNG.class_2@be64738]" started-at="2023-03-11T17:57:15 IST" name="afterevrymethod" finished-at="2023-03-11T17:57:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevrymethod -->
        <test-method signature="personalLoanHome()[pri:0, instance:sec_16_TestNG.class_2@be64738]" started-at="2023-03-11T17:57:15 IST" name="personalLoanHome" finished-at="2023-03-11T17:57:15 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personalLoanHome -->
        <test-method is-config="true" signature="afterevrymethod()[pri:0, instance:sec_16_TestNG.class_2@be64738]" started-at="2023-03-11T17:57:15 IST" name="afterevrymethod" finished-at="2023-03-11T17:57:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevrymethod -->
        <test-method signature="personalLoanCash()[pri:0, instance:sec_16_TestNG.class_2@be64738]" started-at="2023-03-11T17:57:15 IST" name="personalLoanCash" finished-at="2023-03-11T17:57:15 IST" depends-on-methods="sec_16_TestNG.class_2.MobileMtd1" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- personalLoanCash -->
        <test-method is-config="true" signature="afterevrymethod()[pri:0, instance:sec_16_TestNG.class_2@be64738]" started-at="2023-03-11T17:57:15 IST" name="afterevrymethod" finished-at="2023-03-11T17:57:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevrymethod -->
      </class> <!-- sec_16_TestNG.class_2 -->
    </test> <!-- Test_No_1 -->
    <test started-at="2023-03-11T17:57:15 IST" name="Test_No_2" finished-at="2023-03-11T17:57:15 IST" duration-ms="99">
      <class name="sec_16_TestNG.class_4">
        <test-method is-config="true" signature="beforesuite()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:14 IST" name="beforesuite" finished-at="2023-03-11T17:57:14 IST" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesuite -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="beforeclass" finished-at="2023-03-11T17:57:15 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforeevrymethod()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="beforeevrymethod" finished-at="2023-03-11T17:57:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevrymethod -->
        <test-method signature="MobileMtd1()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="MobileMtd1" finished-at="2023-03-11T17:57:15 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileMtd1 -->
        <test-method is-config="true" signature="beforeevrymethod()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="beforeevrymethod" finished-at="2023-03-11T17:57:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevrymethod -->
        <test-method signature="MobileMtd2(java.lang.String,java.lang.String)[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="MobileMtd2" data-provider="getData" finished-at="2023-03-11T17:57:15 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileMtd2 -->
        <test-method is-config="true" signature="beforeevrymethod()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="beforeevrymethod" finished-at="2023-03-11T17:57:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevrymethod -->
        <test-method signature="MobileMtd2(java.lang.String,java.lang.String)[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="MobileMtd2" data-provider="getData" finished-at="2023-03-11T17:57:15 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileMtd2 -->
        <test-method signature="MobileMtd2(java.lang.String,java.lang.String)[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="MobileMtd2" data-provider="getData" finished-at="2023-03-11T17:57:15 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetUsername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileMtd2 -->
        <test-method is-config="true" signature="beforeevrymethod()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="beforeevrymethod" finished-at="2023-03-11T17:57:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevrymethod -->
        <test-method is-config="true" signature="beforeevrymethod()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="beforeevrymethod" finished-at="2023-03-11T17:57:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevrymethod -->
        <test-method signature="RESTAPI()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="RESTAPI" finished-at="2023-03-11T17:57:15 IST" duration-ms="13" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at sec_16_TestNG.class_4.RESTAPI(class_4.java:30)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RESTAPI -->
        <test-method signature="WebLoginAPI(java.lang.String,java.lang.String)[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="WebLoginAPI" finished-at="2023-03-11T17:57:15 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.qaclickacademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginAPI -->
        <test-method is-config="true" signature="beforeevrymethod()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="beforeevrymethod" finished-at="2023-03-11T17:57:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevrymethod -->
        <test-method is-config="true" signature="beforeevrymethod()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="beforeevrymethod" finished-at="2023-03-11T17:57:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevrymethod -->
        <test-method signature="mobileLoginAPI()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="mobileLoginAPI" finished-at="2023-03-11T17:57:15 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginAPI -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="afterclass" finished-at="2023-03-11T17:57:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
        <test-method is-config="true" signature="aftersuite()[pri:0, instance:sec_16_TestNG.class_4@43195e57]" started-at="2023-03-11T17:57:15 IST" name="aftersuite" finished-at="2023-03-11T17:57:15 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftersuite -->
      </class> <!-- sec_16_TestNG.class_4 -->
      <class name="sec_16_TestNG.class_3">
        <test-method signature="mobileLogin()[pri:0, instance:sec_16_TestNG.class_3@1ab3a8c8]" started-at="2023-03-11T17:57:15 IST" name="mobileLogin" finished-at="2023-03-11T17:57:15 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLogin -->
      </class> <!-- sec_16_TestNG.class_3 -->
    </test> <!-- Test_No_2 -->
  </suite> <!-- TestNG_XML_Demo -->
</testng-results>
